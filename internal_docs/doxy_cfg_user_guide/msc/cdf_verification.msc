msc {
    hscale = "1.5",  wordwraparcs = "true";

    APP [label="Application"], OVX [label="OpenVX\nFramework"], HOST [label="Host Kernel\nCallback"], TAR [label="Target Kernel\nCallback"];

    APP box TAR [label="Kernels Loaded"];
    APP box TAR [label="Graph Created"];
    ||| ;
    APP => OVX  [label="vxVerifyGraph(graph)", URL="\ref vxVerifyGraph"];
    ... ;
    OVX box OVX [label="for each kernel {"];
    OVX =>> HOST [label="vx_kernel_validate_f(node, ...)", URL="\ref vx_kernel_validate_f"];
    OVX << HOST [label="vx_status", URL="\ref vx_status_e"];
    OVX box OVX [label="}"];
    ... ;
    OVX box OVX [label="for each kernel {"];
    OVX =>> HOST [label="vx_kernel_initialize_f(node, ...)", URL="\ref  vx_kernel_initialize_f"];
    OVX << HOST [label="vx_status", URL="\ref vx_status_e"];
    OVX box OVX [label="}"];
    ... ;
    OVX box OVX [label="for each kernel {"];
    OVX =>> TAR [label="tivx_target_kernel_f create_func(...)", URL="\ref  tivxAddTargetKernelByName"];
    OVX << TAR [label="vx_status", URL="\ref vx_status_e"];
    OVX box OVX [label="}"];
    ... ;
    APP << OVX [label="vx_status", URL="\ref vx_status_e"];
    APP box TAR [label="Ready to Process or Send Control Commands"];
    ||| ;
    --- [label="send node command asyncronously"];
    ... ;
    APP => OVX  [label="tivxNodeSendCommand(graph, ...)", URL="\ref tivxNodeSendCommand"];
    OVX =>> TAR  [label="tivx_target_kernel_control_f control_func(...)", URL="\ref tivxAddTargetKernelByName"];
    OVX << TAR [label="vx_status", URL="\ref vx_status_e"];
    APP << OVX [label="vx_status", URL="\ref vx_status_e"];
    ... ;
    --- [label="process graph"];
    ... ;
    ||| ;
    APP => OVX  [label="vxProcessGraph(graph)", URL="\ref vxProcessGraph"];
    ... ;
    OVX box OVX [label="for each kernel {"];
    OVX =>> TAR [label="tivx_target_kernel_f process_func(...)", URL="\ref  tivxAddTargetKernelByName"];
    OVX << TAR [label="vx_status", URL="\ref vx_status_e"];
    OVX box OVX [label="}"];
    ... ;
    APP << OVX [label="vx_status", URL="\ref vx_status_e"];
    ||| ;
    APP box TAR [label="Graphs Executed"];
    ||| ;
    ... ;
    APP => OVX [label="vxReleaseGraph(&graph)", URL="\ref vxReleaseGraph"];
    OVX box OVX [label="for each kernel {"];
    OVX =>> TAR [label="tivx_target_kernel_f delete_func(...)", URL="\ref  tivxAddTargetKernelByName"];
    OVX << TAR [label="vx_status", URL="\ref vx_status_e"];
    ... ;
    OVX =>> HOST [label="vxkernel_deinitialize_f(node, ...)", URL="\ref vx_kernel_deinitialize_f"];
    OVX << HOST [label="vx_status", URL="\ref vx_status_e"];
    OVX box OVX [label="}"];
    APP << OVX [label="vx_status", URL="\ref vx_status_e"];
}
